# -----------------------------
# Base runtime image
# -----------------------------
FROM mcr.microsoft.com/dotnet/aspnet:7.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443
ENV ASPNETCORE_URLS=http://+:80

# -----------------------------
# Build stage
# -----------------------------
FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build

# Build arguments for configuration and NuGet authentication
ARG BUILD_CONFIGURATION=Release
ARG NUGET_USERNAME
ARG NUGET_GITHUB_PAT

# Working directory inside the build container
WORKDIR /src

# Copy project file(s) and configure private NuGet source
COPY ["skuata_app.client.csproj", "./"]

# Add private GitHub NuGet source (optional, only if you have private packages)
RUN if [ -n "$NUGET_USERNAME" ] && [ -n "$NUGET_GITHUB_PAT" ]; then \
        dotnet nuget add source \
        --username $NUGET_USERNAME \
        --password $NUGET_GITHUB_PAT \
        --store-password-in-clear-text \
        --name github "https://nuget.pkg.github.com/SoftElsie/index.json"; \
    fi

# Copy the rest of the source code
COPY . .

# Install Node.js (for Blazor WASM or front-end build)
RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && \
    apt-get install -y nodejs && \
    node --version && npm --version

# Restore dependencies
RUN dotnet restore "skuata_app.client.csproj" \
    --source "https://api.nuget.org/v3/index.json" \
    $( [ -n "$NUGET_USERNAME" ] && [ -n "$NUGET_GITHUB_PAT" ] && echo "--source https://nuget.pkg.github.com/SoftElsie/index.json" )

# Ensure publish folder exists
RUN mkdir -p /app/publish

# Build and publish the app
RUN dotnet publish "skuata_app.client.csproj" \
    -c $BUILD_CONFIGURATION \
    -o /app/publish

# -----------------------------
# Final runtime image
# -----------------------------
FROM base AS final
WORKDIR /app

# Copy the published output from build stage
COPY --from=build /app/publish .

# Start the app
ENTRYPOINT ["dotnet", "skuata_app.client.dll"]
